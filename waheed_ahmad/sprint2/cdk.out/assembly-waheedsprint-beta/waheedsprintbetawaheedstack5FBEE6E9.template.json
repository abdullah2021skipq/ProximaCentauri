{
  "Resources": {
    "lambdaroleDFE21467": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/CloudwatchFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonS3FullAccess"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "waheedsprint/beta/waheedstack/lambda-role/Resource"
      }
    },
    "lambda8B5974B5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-waheed11-assets-315997497220-us-east-2",
          "S3Key": "965f1608c5420f9a2d5c97daa6e352563808cd2246855aa1d4964b704eb81c63.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "lambdaroleDFE21467",
            "Arn"
          ]
        },
        "Handler": "webhealthmonitor.lambda_handler",
        "Runtime": "python3.6"
      },
      "DependsOn": [
        "lambdaroleDFE21467"
      ],
      "Metadata": {
        "aws:cdk:path": "waheedsprint/beta/waheedstack/lambda/Resource",
        "aws:asset:path": "../asset.965f1608c5420f9a2d5c97daa6e352563808cd2246855aa1d4964b704eb81c63",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "lambdaCurrentVersionD18FDC35e831296599ae16bf686503dad2952b55": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "lambda8B5974B5"
        }
      },
      "Metadata": {
        "aws:cdk:path": "waheedsprint/beta/waheedstack/lambda/CurrentVersion/Resource"
      }
    },
    "DynamoDBLambda863ACDF8": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-waheed11-assets-315997497220-us-east-2",
          "S3Key": "965f1608c5420f9a2d5c97daa6e352563808cd2246855aa1d4964b704eb81c63.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "lambdaroleDFE21467",
            "Arn"
          ]
        },
        "Handler": "dynamodb_lambda.lambda_handler",
        "Runtime": "python3.6"
      },
      "DependsOn": [
        "lambdaroleDFE21467"
      ],
      "Metadata": {
        "aws:cdk:path": "waheedsprint/beta/waheedstack/DynamoDBLambda/Resource",
        "aws:asset:path": "../asset.965f1608c5420f9a2d5c97daa6e352563808cd2246855aa1d4964b704eb81c63",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "webHealthinvoke169F041D": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "call lambda periodic",
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "lambda8B5974B5",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "waheedsprint/beta/waheedstack/webHealth_invoke/Resource"
      }
    },
    "webHealthinvokeAllowEventRulewaheedsprintbetawaheedstacklambdaF3957B6CCBB72961": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "lambda8B5974B5",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "webHealthinvoke169F041D",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "waheedsprint/beta/waheedstack/webHealth_invoke/AllowEventRulewaheedsprintbetawaheedstacklambdaF3957B6C"
      }
    },
    "pipelinealarmA8CF1656": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "lambda8B5974B5"
            }
          }
        ],
        "MetricName": "Duration",
        "Namespace": "AWS/Lambda",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 350
      },
      "Metadata": {
        "aws:cdk:path": "waheedsprint/beta/waheedstack/pipelinealarm/Resource"
      }
    },
    "AvailabilityAlarmE6EBAA96": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 1,
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Id": "m1",
            "Label": "Availability Metric",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "URL",
                    "Value": "www.twitter.com"
                  }
                ],
                "MetricName": "url_availability",
                "Namespace": "waheedwebhealth"
              },
              "Period": 60,
              "Stat": "Average"
            },
            "ReturnData": true
          }
        ],
        "Threshold": 1
      },
      "Metadata": {
        "aws:cdk:path": "waheedsprint/beta/waheedstack/AvailabilityAlarm/Resource"
      }
    },
    "LatencyAlarm5394FC57": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Id": "m1",
            "Label": "latency Metric",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "URL",
                    "Value": "www.twitter.com"
                  }
                ],
                "MetricName": "url_latency",
                "Namespace": "waheedwebhealth"
              },
              "Period": 60,
              "Stat": "Average"
            },
            "ReturnData": true
          }
        ],
        "Threshold": 0.25
      },
      "Metadata": {
        "aws:cdk:path": "waheedsprint/beta/waheedstack/LatencyAlarm/Resource"
      }
    },
    "LambdaAlias9C15A666": {
      "Type": "AWS::Lambda::Alias",
      "Properties": {
        "FunctionName": {
          "Ref": "lambda8B5974B5"
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "lambdaCurrentVersionD18FDC35e831296599ae16bf686503dad2952b55",
            "Version"
          ]
        },
        "Name": "waheedpipelinealias"
      },
      "Metadata": {
        "aws:cdk:path": "waheedsprint/beta/waheedstack/LambdaAlias/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/02OzWrDMBCEnyX39abBtNBbnUDOwYXct/I2Ua0f0EoJRejdK9lp6Wm+mYFhdrjrn/Fp80Z36dQ0b7PygTG/R1IzDCIcK160u8DBO4khqQgji09BMRw+3S8XaAtZk8U8erN2VQsYsh8TYT4mp6L2rjV/fOYgj+wfnjhYLYsbjCZp2QIFpO+ovRJczlWP+6RmjnsSBr6xq1Ue0+NBag+U8Wm6U1RXzIOhYNe9CqUUOH3Hq3fbHl/wdfMlWnchuagt47jqD14UQKEkAQAA"
      },
      "Metadata": {
        "aws:cdk:path": "waheedsprint/beta/waheedstack/CDKMetadata/Default"
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/waheed11/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}